/*
 * JS for startScreen generated by Appery.io
 */

Apperyio.getProjectGUID = function() {
    return '566c72a3-f7ce-435a-932b-efebe1a73adf';
};

function navigateTo(outcome, useAjax) {
    Apperyio.navigateTo(outcome, useAjax);
}

// Deprecated


function adjustContentHeight() {
    Apperyio.adjustContentHeightWithPadding();
}

function adjustContentHeightWithPadding(_page) {
    Apperyio.adjustContentHeightWithPadding(_page);
}

function setDetailContent(pageUrl) {
    Apperyio.setDetailContent(pageUrl);
}

Apperyio.AppPages = [{
    "name": "infoScreen",
    "location": "#infoScreen"
}, {
    "name": "startScreen",
    "location": "#startScreen"
}, {
    "name": "scanScreen",
    "location": "#scanScreen"
}];

startScreen_js = function(runBeforeShow) {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'mobilelabel_11': 'startScreen_mobilelabel_11',
        'mobilegrid_2': 'startScreen_mobilegrid_2',
        'mobilegridcell_3': 'startScreen_mobilegridcell_3',
        'mobilelabel_7': 'startScreen_mobilelabel_7',
        'mobilegridcell_4': 'startScreen_mobilegridcell_4',
        'txtUserName': 'startScreen_txtUserName',
        'mobilegridcell_5': 'startScreen_mobilegridcell_5',
        'mobilelabel_8': 'startScreen_mobilelabel_8',
        'mobilegridcell_6': 'startScreen_mobilegridcell_6',
        'txtPassword': 'startScreen_txtPassword',
        'mobilegridcell_12': 'startScreen_mobilegridcell_12',
        'mobilegridcell_13': 'startScreen_mobilegridcell_13',
        'btnLogin': 'startScreen_btnLogin'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fix for jQuery Mobile's footer in Cordova webview on WP8 devices
        var msViewportStyle = document.createElement("style");
        msViewportStyle.appendChild(
        document.createTextNode("@media screen and (orientation: portrait){@-ms-viewport {width: 320px; height: 536px;user-zoom: fixed;max-zoom: 1;min-zoom: 1;}}" + "@media screen and (orientation:landscape){@-ms-viewport{width:480px;user-zoom:fixed;max-zoom:1;min-zoom:1;}}"));
        document.getElementsByTagName("head")[0].appendChild(msViewportStyle);
    }

    Apperyio.CurrentScreen = 'startScreen';

    /*
     * Nonvisual components
     */
    var datasources = [];

    restservice1 = new Apperyio.DataSource(LoginService, {
        'onBeforeSend': function(jqXHR) {

        },
        'onComplete': function(jqXHR, textStatus) {

            Apperyio.refreshScreenFormElements("startScreen");
        },
        'onSuccess': function(data) {},
        'onError': function(jqXHR, textStatus, errorThrown) {
            alert("Invalid credentials! Please try again");
        },
        'responseMapping': [{
            'PATH': ['AppUserId'],
            'ID': '___local_storage___',
            'ATTR': 'userid'
        }, {
            'PATH': ['AppRoleId'],
            'ID': '___local_storage___',
            'ATTR': 'roleid'
        }, {
            'PATH': ['AppRoleId'],
            'ID': '___js___',
            'ATTR': 'redirectBasedOnRole',
            'TRANSFORMATION': function(value, element) {
                var text = value;
                localStorage.setItem("isRegistration", false);
                localStorage.setItem("isPassThrough", false);
                localStorage.setItem("isAmbulance", false);
                localStorage.setItem("isRescue", false);
                localStorage.setItem("isDoctor", false);
                localStorage.setItem("isStatusUpdateRequired", false);
                localStorage.setItem("isJustSavingOnce", false);
                localStorage.setItem("showInfo", false);
                if (text == 1) {
                    alert("Please use portal");
                }
                if (text > 1) {
                    if (text == 2) {
                        localStorage.setItem("isRegistration", true);
                        localStorage.setItem("isJustSavingOnce", true);
                    } else if (text == 3) {
                        localStorage.setItem("isPassThrough", true);
                        localStorage.setItem("isJustSavingOnce", true);
                    } else if (text == 4) {
                        localStorage.setItem("isAmbulance", true);
                        localStorage.setItem("isJustSavingOnce", true);
                        localStorage.setItem("showInfo", true);
                    } else if (text == 5) {
                        localStorage.setItem("isRescue", true);
                        localStorage.setItem("isStatusUpdateRequired", true);
                        localStorage.setItem("showInfo", true);
                    } else if (text == 6) {
                        localStorage.setItem("isDoctor", true);
                        localStorage.setItem("isStatusUpdateRequired", true);
                        localStorage.setItem("showInfo", true);
                    }
                    Apperyio.navigateTo('scanScreen', {
                        reverse: false
                    });
                }

            }
        }],
        'requestMapping': [{
            'PATH': ['Username'],
            'TYPE': 'STRING',
            'ID': 'txtUserName',
            'ATTR': 'value'
        }, {
            'PATH': ['Password'],
            'TYPE': 'STRING',
            'ID': 'txtPassword',
            'ATTR': 'value'
        }]
    });

    datasources.push(restservice1);

    /*
     * Events and handlers
     */

    // Before Show
    var startScreen_beforeshow = function() {
            Apperyio.CurrentScreen = "startScreen";
            for (var idx = 0; idx < datasources.length; idx++) {
                datasources[idx].__setupDisplay();
            }
        };

    // On Load
    var startScreen_onLoad = function() {
            startScreen_elementsExtraJS();

            // TODO fire device events only if necessary (with JS logic)
            startScreen_deviceEvents();
            startScreen_windowEvents();
            startScreen_elementsEvents();
        };

    // screen window events
    var startScreen_windowEvents = function() {

            $('#startScreen').bind('pageshow orientationchange', function() {
                var _page = this;
                adjustContentHeightWithPadding(_page);
            });

        };

    // device events
    var startScreen_deviceEvents = function() {
            document.addEventListener("deviceready", function() {

            });
        };

    // screen elements extra js
    var startScreen_elementsExtraJS = function() {
            // screen (startScreen) extra code

        };

    // screen elements handler
    var startScreen_elementsEvents = function() {
            $(document).on("click", "a :input,a a,a fieldset label", function(event) {
                event.stopPropagation();
            });

            $(document).off("click", '#startScreen_mobilecontainer1 [name="btnLogin"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        try {
                            restservice1.execute({})
                        } catch (ex) {
                            console.log(ex.name + '  ' + ex.message);
                            hideSpinner();
                        };

                    }
                },
            }, '#startScreen_mobilecontainer1 [name="btnLogin"]');

        };

    $(document).off("pagebeforeshow", "#startScreen").on("pagebeforeshow", "#startScreen", function(event, ui) {
        startScreen_beforeshow();
    });

    if (runBeforeShow) {
        startScreen_beforeshow();
    } else {
        startScreen_onLoad();
    }
};

$(document).off("pagecreate", "#startScreen").on("pagecreate", "#startScreen", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    startScreen_js();
});

scanScreen_js = function(runBeforeShow) {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'mobilebutton_150': 'scanScreen_mobilebutton_150',
        'mobilecollapsibleset_142': 'scanScreen_mobilecollapsibleset_142',
        'mobilecollapsblock_143': 'scanScreen_mobilecollapsblock_143',
        'settingsBl': 'scanScreen_settingsBl',
        'mobilecollapsblockcontent_145': 'scanScreen_mobilecollapsblockcontent_145',
        'mobilelabel_21': 'scanScreen_mobilelabel_21',
        'cmdCheckPoint': 'scanScreen_cmdCheckPoint',
        'cmdCheckPoint-0': 'scanScreen_cmdCheckPoint-0',
        'lblChooseAction': 'scanScreen_lblChooseAction',
        'cmdRegAction': 'scanScreen_cmdRegAction',
        'cmdRegAction-0': 'scanScreen_cmdRegAction-0',
        'cmbPassActions': 'scanScreen_cmbPassActions',
        'cmbPassActions-0': 'scanScreen_cmbPassActions-0',
        'cmbAmbulanceActions': 'scanScreen_cmbAmbulanceActions',
        'cmbAmbulanceActions-0': 'scanScreen_cmbAmbulanceActions-0',
        'btnSaveSettings': 'scanScreen_btnSaveSettings',
        'mobilecollapsblock_146': 'scanScreen_mobilecollapsblock_146',
        'scanBlock': 'scanScreen_scanBlock',
        'mobilecollapsblockcontent_148': 'scanScreen_mobilecollapsblockcontent_148',
        'btnScanTag': 'scanScreen_btnScanTag',
        'txtNFCTag': 'scanScreen_txtNFCTag',
        'scanStatus': 'scanScreen_scanStatus',
        'lblChooseStatus': 'scanScreen_lblChooseStatus',
        'cmbRescueActions': 'scanScreen_cmbRescueActions',
        'cmbRescueActions-0': 'scanScreen_cmbRescueActions-0',
        'cmbDoctorActions': 'scanScreen_cmbDoctorActions',
        'cmbDoctorActions-0': 'scanScreen_cmbDoctorActions-0',
        'lessInfoGrid': 'scanScreen_lessInfoGrid',
        'mobilegridcell_85': 'scanScreen_mobilegridcell_85',
        'mobilelabel_89': 'scanScreen_mobilelabel_89',
        'mobilegridcell_86': 'scanScreen_mobilegridcell_86',
        'lblFirstName': 'scanScreen_lblFirstName',
        'mobilegridcell_87': 'scanScreen_mobilegridcell_87',
        'mobilelabel_90': 'scanScreen_mobilelabel_90',
        'mobilegridcell_88': 'scanScreen_mobilegridcell_88',
        'lblLastName': 'scanScreen_lblLastName',
        'mobilegridcell_91': 'scanScreen_mobilegridcell_91',
        'mobilelabel_99': 'scanScreen_mobilelabel_99',
        'mobilegridcell_92': 'scanScreen_mobilegridcell_92',
        'lblGender': 'scanScreen_lblGender',
        'mobilegridcell_93': 'scanScreen_mobilegridcell_93',
        'mobilelabel_98': 'scanScreen_mobilelabel_98',
        'mobilegridcell_94': 'scanScreen_mobilegridcell_94',
        'lblAge': 'scanScreen_lblAge',
        'mobilegridcell_95': 'scanScreen_mobilegridcell_95',
        'mobilelabel_97': 'scanScreen_mobilelabel_97',
        'mobilegridcell_96': 'scanScreen_mobilegridcell_96',
        'lblBloodGroup': 'scanScreen_lblBloodGroup',
        'mobilegridcell_100': 'scanScreen_mobilegridcell_100',
        'mobilelabel_104': 'scanScreen_mobilelabel_104',
        'mobilegridcell_101': 'scanScreen_mobilegridcell_101',
        'lblGroupCount': 'scanScreen_lblGroupCount',
        'mobilegridcell_102': 'scanScreen_mobilegridcell_102',
        'mobilelabel_110': 'scanScreen_mobilelabel_110',
        'mobilegridcell_103': 'scanScreen_mobilegridcell_103',
        'lblEmergencyContact': 'scanScreen_lblEmergencyContact',
        'mobilegridcell_111': 'scanScreen_mobilegridcell_111',
        'mobilelabel_113': 'scanScreen_mobilelabel_113',
        'mobilegridcell_112': 'scanScreen_mobilegridcell_112',
        'lblEmergencyContactNumber': 'scanScreen_lblEmergencyContactNumber',
        'mobilegridcell_126': 'scanScreen_mobilegridcell_126',
        'mobilelabel_128': 'scanScreen_mobilelabel_128',
        'mobilegridcell_127': 'scanScreen_mobilegridcell_127',
        'lblMedicalConditon': 'scanScreen_lblMedicalConditon',
        'btnSaveStatus': 'scanScreen_btnSaveStatus',
        'registerGrid': 'scanScreen_registerGrid',
        'mobilegridcell_30': 'scanScreen_mobilegridcell_30',
        'mobilelabel_35': 'scanScreen_mobilelabel_35',
        'mobilegridcell_31': 'scanScreen_mobilegridcell_31',
        'txtFirstName': 'scanScreen_txtFirstName',
        'mobilegridcell_32': 'scanScreen_mobilegridcell_32',
        'mobilelabel_36': 'scanScreen_mobilelabel_36',
        'mobilegridcell_33': 'scanScreen_mobilegridcell_33',
        'txtLastName': 'scanScreen_txtLastName',
        'mobilegridcell_40': 'scanScreen_mobilegridcell_40',
        'mobilelabel_58': 'scanScreen_mobilelabel_58',
        'mobilegridcell_41': 'scanScreen_mobilegridcell_41',
        'cmbGender': 'scanScreen_cmbGender',
        'cmbGender-0': 'scanScreen_cmbGender-0',
        'mobilegridcell_42': 'scanScreen_mobilegridcell_42',
        'mobilelabel_63': 'scanScreen_mobilelabel_63',
        'mobilegridcell_43': 'scanScreen_mobilegridcell_43',
        'txtAge': 'scanScreen_txtAge',
        'mobilegridcell_44': 'scanScreen_mobilegridcell_44',
        'mobilelabel_64': 'scanScreen_mobilelabel_64',
        'mobilegridcell_45': 'scanScreen_mobilegridcell_45',
        'cmbBloodGroup': 'scanScreen_cmbBloodGroup',
        'cmbBloodGroup-0': 'scanScreen_cmbBloodGroup-0',
        'mobilegridcell_46': 'scanScreen_mobilegridcell_46',
        'mobilelabel_67': 'scanScreen_mobilelabel_67',
        'mobilegridcell_47': 'scanScreen_mobilegridcell_47',
        'txtPhonenumber': 'scanScreen_txtPhonenumber',
        'mobilegridcell_48': 'scanScreen_mobilegridcell_48',
        'mobilelabel_69': 'scanScreen_mobilelabel_69',
        'mobilegridcell_49': 'scanScreen_mobilegridcell_49',
        'groupCount': 'scanScreen_groupCount',
        'mobilegridcell_50': 'scanScreen_mobilegridcell_50',
        'mobilelabel_71': 'scanScreen_mobilelabel_71',
        'mobilegridcell_51': 'scanScreen_mobilegridcell_51',
        'txtEmergencyContact': 'scanScreen_txtEmergencyContact',
        'mobilegridcell_52': 'scanScreen_mobilegridcell_52',
        'mobilelabel_73': 'scanScreen_mobilelabel_73',
        'mobilegridcell_53': 'scanScreen_mobilegridcell_53',
        'txtEmergencyContactNumber': 'scanScreen_txtEmergencyContactNumber',
        'mobilegridcell_54': 'scanScreen_mobilegridcell_54',
        'mobilelabel_76': 'scanScreen_mobilelabel_76',
        'mobilegridcell_55': 'scanScreen_mobilegridcell_55',
        'SMSPackage': 'scanScreen_SMSPackage',
        'mobilegridcell_81': 'scanScreen_mobilegridcell_81',
        'mobilelabel_125': 'scanScreen_mobilelabel_125',
        'mobilegridcell_82': 'scanScreen_mobilegridcell_82',
        'txaMedicalCondition': 'scanScreen_txaMedicalCondition',
        'btnSaveUser': 'scanScreen_btnSaveUser'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fix for jQuery Mobile's footer in Cordova webview on WP8 devices
        var msViewportStyle = document.createElement("style");
        msViewportStyle.appendChild(
        document.createTextNode("@media screen and (orientation: portrait){@-ms-viewport {width: 320px; height: 536px;user-zoom: fixed;max-zoom: 1;min-zoom: 1;}}" + "@media screen and (orientation:landscape){@-ms-viewport{width:480px;user-zoom:fixed;max-zoom:1;min-zoom:1;}}"));
        document.getElementsByTagName("head")[0].appendChild(msViewportStyle);
    }

    Apperyio.CurrentScreen = 'scanScreen';

    /*
     * Nonvisual components
     */
    var datasources = [];

    getCheckPoints = new Apperyio.DataSource(GetCheckPoints, {
        'onBeforeSend': function(jqXHR) {

        },
        'onComplete': function(jqXHR, textStatus) {
            if (localStorage.getItem("chosenCheckpoint") === null && localStorage.getItem("chosenAction") === null) {
                localStorage.setItem("areSettingsFine", 0);
                localStorage.setItem("chosenCheckpoint", "0");
                localStorage.setItem("chosenCheckpoint", "0");
            }
            if (localStorage.getItem("chosenCheckpoint") != "0") {
                var dropDown = $('[name=cmdCheckPoint]');
                var newData = localStorage.getItem("chosenCheckpoint");
                dropDown.Selected = newData;
            }

            if (localStorage.getItem("chosenCheckpoint") != "0" && localStorage.getItem("chosenAction") != "0") localStorage.setItem("areSettingsFine", 1);
            else localStorage.setItem("areSettingsFine", 0);

            Apperyio.refreshScreenFormElements("scanScreen");
        },
        'onSuccess': function(data) {},
        'onError': function(jqXHR, textStatus, errorThrown) {},
        'responseMapping': [{
            'PATH': ['$'],
            'ID': 'cmdCheckPoint-0',
            'SET': [{
                'PATH': ['CheckPointId'],
                'ID': 'cmdCheckPoint-0',
                'ATTR': 'value'
            }, {
                'PATH': ['CheckPointName'],
                'ID': 'cmdCheckPoint-0',
                'ATTR': '@'
            }]
        }],
        'requestMapping': []
    });

    datasources.push(getCheckPoints);

    getUserProfile = new Apperyio.DataSource(GetUserProfile, {
        'onBeforeSend': function(jqXHR) {

        },
        'onComplete': function(jqXHR, textStatus) {

            Apperyio.refreshScreenFormElements("scanScreen");
        },
        'onSuccess': function(data) {},
        'onError': function(jqXHR, textStatus, errorThrown) {},
        'responseMapping': [{
            'PATH': ['FirstName'],
            'ID': 'lblFirstName',
            'ATTR': '@'
        }, {
            'PATH': ['LastName'],
            'ID': 'lblLastName',
            'ATTR': '@'
        }, {
            'PATH': ['Gender'],
            'ID': 'lblGender',
            'ATTR': '@'
        }, {
            'PATH': ['Age'],
            'ID': 'lblAge',
            'ATTR': '@'
        }, {
            'PATH': ['BloodGroup'],
            'ID': 'lblBloodGroup',
            'ATTR': '@'
        }],
        'requestMapping': [{
            'PATH': ['NFCTagId'],
            'TYPE': 'STRING',
            'ID': 'txtNFCTag',
            'ATTR': '@'
        }]
    });

    datasources.push(getUserProfile);

    createNewUserProfile = new Apperyio.DataSource(CreateNewUserProfile, {
        'onBeforeSend': function(jqXHR) {

        },
        'onComplete': function(jqXHR, textStatus) {

            Apperyio.refreshScreenFormElements("scanScreen");
        },
        'onSuccess': function(data) {},
        'onError': function(jqXHR, textStatus, errorThrown) {},
        'responseMapping': [],
        'requestMapping': [{
            'PATH': ['firstName'],
            'TYPE': 'STRING',
            'ID': 'txtFirstName',
            'ATTR': 'value'
        }, {
            'PATH': ['nfctag'],
            'TYPE': 'STRING',
            'ID': 'txtNFCTag',
            'ATTR': '@'
        }, {
            'PATH': ['age'],
            'TYPE': 'STRING',
            'ID': 'txtAge',
            'ATTR': 'value'
        }, {
            'PATH': ['gender'],
            'TYPE': 'STRING',
            'ID': 'cmbGender',
            'ATTR': 'value'
        }, {
            'PATH': ['SMSPackage'],
            'TYPE': 'STRING',
            'ID': 'SMSPackage',
            'ATTR': 'value'
        }, {
            'PATH': ['firstCheckpoint'],
            'TYPE': 'STRING',
            'ID': 'cmdCheckPoint',
            'ATTR': 'value'
        }, {
            'PATH': ['appUserId'],
            'TYPE': 'STRING',
            'ID': '___local_storage___',
            'ATTR': 'userid'
        }, {
            'PATH': ['lastName'],
            'TYPE': 'STRING',
            'ID': 'txtLastName',
            'ATTR': 'value'
        }, {
            'PATH': ['bloodGroup'],
            'TYPE': 'STRING',
            'ID': 'cmbBloodGroup',
            'ATTR': 'value'
        }, {
            'PATH': ['phonenumber'],
            'TYPE': 'STRING',
            'ID': 'txtPhonenumber',
            'ATTR': 'value'
        }, {
            'PATH': ['groupcount'],
            'TYPE': 'STRING',
            'ID': 'groupCount',
            'ATTR': 'value'
        }, {
            'PATH': ['emergencyContact'],
            'TYPE': 'STRING',
            'ID': 'txtEmergencyContact',
            'ATTR': 'value'
        }, {
            'PATH': ['emergencyContactNumber'],
            'TYPE': 'STRING',
            'ID': 'txtEmergencyContactNumber',
            'ATTR': 'value'
        }, {
            'PATH': ['medicalCondition'],
            'TYPE': 'STRING',
            'ID': 'txaMedicalCondition',
            'ATTR': 'value'
        }]
    });

    datasources.push(createNewUserProfile);

    saveLog = new Apperyio.DataSource(logActivityWithStatus, {
        'onBeforeSend': function(jqXHR) {

        },
        'onComplete': function(jqXHR, textStatus) {

            Apperyio.refreshScreenFormElements("scanScreen");
        },
        'onSuccess': function(data) {},
        'onError': function(jqXHR, textStatus, errorThrown) {},
        'responseMapping': [],
        'requestMapping': [{
            'PATH': ['nfctagid'],
            'TYPE': 'STRING',
            'ID': 'txtNFCTag',
            'ATTR': '@'
        }, {
            'PATH': ['checkpointId'],
            'TYPE': 'STRING',
            'ID': '___local_storage___',
            'ATTR': 'chosenCheckpoint'
        }, {
            'PATH': ['action'],
            'TYPE': 'STRING',
            'ID': '___local_storage___',
            'ATTR': 'chosenAction'
        }, {
            'PATH': ['appuserid'],
            'TYPE': 'STRING',
            'ID': '___local_storage___',
            'ATTR': 'userid'
        }]
    });

    datasources.push(saveLog);

    /*
     * Events and handlers
     */

    // Before Show
    var scanScreen_beforeshow = function() {
            Apperyio.CurrentScreen = "scanScreen";
            for (var idx = 0; idx < datasources.length; idx++) {
                datasources[idx].__setupDisplay();
            }
        };

    // On Load
    var scanScreen_onLoad = function() {
            scanScreen_elementsExtraJS();

            try {
                getCheckPoints.execute({})
            } catch (ex) {
                console.log(ex.name + '  ' + ex.message);
                hideSpinner();
            };
            toggle('scanScreen_cmbPassActions', 'mob', localStorage.getItem('isPassThrough'));
            toggle('scanScreen_cmbRescueActions', 'mob', localStorage.getItem('isRescue'));
            toggle('scanScreen_cmbDoctorActions', 'mob', localStorage.getItem('isDoctor'));
            toggle('scanScreen_cmdRegAction', 'mob', localStorage.getItem('isRegistration'));
            toggle('scanScreen_lblChooseAction', 'mob', localStorage.getItem('isJustSavingOnce'));
            toggle('scanScreen_lblChooseStatus', 'mob', localStorage.getItem('isStatusUpdateRequired'));
            toggle('scanScreen_cmbAmbulanceActions', 'mob', localStorage.getItem('isAmbulance'));
            toggle('scanScreen_registerGrid', 'mob', localStorage.getItem('isRegistration'));
            toggle('scanScreen_lessInfoGrid', 'mob', localStorage.getItem('showInfo'));
            toggle('scanScreen_btnSaveStatus', 'mob', localStorage.getItem('isStatusUpdateRequired'));
            toggle('scanScreen_registerGrid', 'mob', localStorage.getItem('isRegistration'));
            toggle('scanScreen_btnSaveUser', 'mob', 'true');

            // TODO fire device events only if necessary (with JS logic)
            scanScreen_deviceEvents();
            scanScreen_windowEvents();
            scanScreen_elementsEvents();
        };

    // screen window events
    var scanScreen_windowEvents = function() {

            $('#scanScreen').bind('pageshow orientationchange', function() {
                var _page = this;
                adjustContentHeightWithPadding(_page);
            });

        };

    // device events
    var scanScreen_deviceEvents = function() {
            document.addEventListener("deviceready", function() {

            });
        };

    // screen elements extra js
    var scanScreen_elementsExtraJS = function() {
            // screen (scanScreen) extra code

            /* mobilecollapsblock_143 */

            $("#scanScreen_mobilecollapsblock_143 .ui-collapsible-heading-toggle").attr("tabindex", "31");

            /* cmdCheckPoint */

            $("#scanScreen_cmdCheckPoint").parent().find("a.ui-btn").attr("tabindex", "3");

            /* cmdRegAction */

            $("#scanScreen_cmdRegAction").parent().find("a.ui-btn").attr("tabindex", "4");

            /* cmbPassActions */

            $("#scanScreen_cmbPassActions").parent().find("a.ui-btn").attr("tabindex", "25");

            /* cmbAmbulanceActions */

            $("#scanScreen_cmbAmbulanceActions").parent().find("a.ui-btn").attr("tabindex", "30");

            /* mobilecollapsblock_146 */

            $("#scanScreen_mobilecollapsblock_146 .ui-collapsible-heading-toggle").attr("tabindex", "31");

            /* cmbRescueActions */

            $("#scanScreen_cmbRescueActions").parent().find("a.ui-btn").attr("tabindex", "26");

            /* cmbDoctorActions */

            $("#scanScreen_cmbDoctorActions").parent().find("a.ui-btn").attr("tabindex", "28");

            /* cmbGender */

            $("#scanScreen_cmbGender").parent().find("a.ui-btn").attr("tabindex", "13");

            /* cmbBloodGroup */

            $("#scanScreen_cmbBloodGroup").parent().find("a.ui-btn").attr("tabindex", "15");

            /* SMSPackage */

            $("#scanScreen_SMSPackage").parent().find(".ui-flipswitch-on").attr("tabindex", "24");
            $("#scanScreen_SMSPackage").val("on").flipswitch('refresh');

        };

    // screen elements handler
    var scanScreen_elementsEvents = function() {
            $(document).on("click", "a :input,a a,a fieldset label", function(event) {
                event.stopPropagation();
            });

            $(document).off("click", '#scanScreen_mobileheader [name="mobilebutton_150"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        Apperyio.navigateTo('startScreen', {
                            reverse: false
                        });

                    }
                },
            }, '#scanScreen_mobileheader [name="mobilebutton_150"]');

            $(document).off("change", '#scanScreen_mobilecontainer [name="cmdCheckPoint"]').on({
                change: function() {
                    setVar_('chosenCheckpoint', 'scanScreen_cmdCheckPoint', 'value', '', this);
                },
            }, '#scanScreen_mobilecontainer [name="cmdCheckPoint"]');

            $(document).off("change", '#scanScreen_mobilecontainer [name="cmdRegAction"]').on({
                change: function() {
                    setVar_('chosenAction', 'scanScreen_cmdRegAction', 'value', '', this);
                },
            }, '#scanScreen_mobilecontainer [name="cmdRegAction"]');

            $(document).off("change", '#scanScreen_mobilecontainer [name="cmbPassActions"]').on({
                change: function() {
                    setVar_('chosenAction', 'scanScreen_cmbPassActions', 'value', '', this);
                },
            }, '#scanScreen_mobilecontainer [name="cmbPassActions"]');

            $(document).off("change", '#scanScreen_mobilecontainer [name="cmbAmbulanceActions"]').on({
                change: function() {
                    setVar_('chosenAction', 'scanScreen_cmbAmbulanceActions', 'value', '', this);
                },
            }, '#scanScreen_mobilecontainer [name="cmbAmbulanceActions"]');

            $(document).off("click", '#scanScreen_mobilecontainer [name="btnSaveSettings"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        var checkpoint = localStorage.getItem("chosenCheckpoint");
                        var action = localStorage.getItem("chosenAction");

                        if (checkpoint == "0" || action == "0") {
                            localStorage.setItem("areSettingsFine", 0);
                            $("collapseBlock").collapsible("expand");
                            alert("Please select valid options");
                        } else {
                            localStorage.setItem("areSettingsFine", 1);
                            $("collapseBlock").collapsible("collapse");
                            alert("Settings saved");
                        };

                    }
                },
            }, '#scanScreen_mobilecontainer [name="btnSaveSettings"]');

            $(document).off("click", '#scanScreen_mobilecontainer [name="btnScanTag"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) { //Scan the tag
                        //If it is user registration mode
                        //	Allow user to enter the details
                        //	Save will be called to save the profile and log will be called to log the first event
                        //If it anything apart from rescue, ambulance and doctor mode 
                        //	log activity will be called;
                    }
                },
            }, '#scanScreen_mobilecontainer [name="btnScanTag"]');

            $(document).off("change", '#scanScreen_mobilecontainer [name="cmbRescueActions"]').on({
                change: function() {
                    setVar_('chosenAction', 'scanScreen_cmbRescueActions', 'value', '', this);
                },
            }, '#scanScreen_mobilecontainer [name="cmbRescueActions"]');

            $(document).off("change", '#scanScreen_mobilecontainer [name="cmbDoctorActions"]').on({
                change: function() {
                    setVar_('chosenAction', 'scanScreen_cmbDoctorActions', 'value', '', this);
                },
            }, '#scanScreen_mobilecontainer [name="cmbDoctorActions"]');

            $(document).off("click", '#scanScreen_mobilecontainer [name="btnSaveStatus"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        setVar_('chosenCheckpoint', 'scanScreen_cmdCheckPoint', 'value', '', this);
                        try {
                            saveLog.execute({})
                        } catch (ex) {
                            console.log(ex.name + '  ' + ex.message);
                            hideSpinner();
                        };

                    }
                },
            }, '#scanScreen_mobilecontainer [name="btnSaveStatus"]');

            $(document).off("click", '#scanScreen_mobilecontainer [name="btnSaveUser"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        setVar_('chosenCheckpoint', 'scanScreen_cmdCheckPoint', 'value', '', this);
                        try {
                            createNewUserProfile.execute({})
                        } catch (ex) {
                            console.log(ex.name + '  ' + ex.message);
                            hideSpinner();
                        };
                        try {
                            saveLog.execute({})
                        } catch (ex) {
                            console.log(ex.name + '  ' + ex.message);
                            hideSpinner();
                        };

                    }
                },
            }, '#scanScreen_mobilecontainer [name="btnSaveUser"]');

        };

    $(document).off("pagebeforeshow", "#scanScreen").on("pagebeforeshow", "#scanScreen", function(event, ui) {
        scanScreen_beforeshow();
    });

    if (runBeforeShow) {
        scanScreen_beforeshow();
    } else {
        scanScreen_onLoad();
    }
};

$(document).off("pagecreate", "#scanScreen").on("pagecreate", "#scanScreen", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    scanScreen_js();
});

infoScreen_js = function(runBeforeShow) {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'mobilelabel_1': 'infoScreen_mobilelabel_1'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fix for jQuery Mobile's footer in Cordova webview on WP8 devices
        var msViewportStyle = document.createElement("style");
        msViewportStyle.appendChild(
        document.createTextNode("@media screen and (orientation: portrait){@-ms-viewport {width: 320px; height: 536px;user-zoom: fixed;max-zoom: 1;min-zoom: 1;}}" + "@media screen and (orientation:landscape){@-ms-viewport{width:480px;user-zoom:fixed;max-zoom:1;min-zoom:1;}}"));
        document.getElementsByTagName("head")[0].appendChild(msViewportStyle);
    }

    Apperyio.CurrentScreen = 'infoScreen';

    /*
     * Nonvisual components
     */
    var datasources = [];

    /*
     * Events and handlers
     */

    // Before Show
    var infoScreen_beforeshow = function() {
            Apperyio.CurrentScreen = "infoScreen";
            for (var idx = 0; idx < datasources.length; idx++) {
                datasources[idx].__setupDisplay();
            }
        };

    // On Load
    var infoScreen_onLoad = function() {
            infoScreen_elementsExtraJS();

            // TODO fire device events only if necessary (with JS logic)
            infoScreen_deviceEvents();
            infoScreen_windowEvents();
            infoScreen_elementsEvents();
        };

    // screen window events
    var infoScreen_windowEvents = function() {

            $('#infoScreen').bind('pageshow orientationchange', function() {
                var _page = this;
                adjustContentHeightWithPadding(_page);
            });

        };

    // device events
    var infoScreen_deviceEvents = function() {
            document.addEventListener("deviceready", function() {

            });
        };

    // screen elements extra js
    var infoScreen_elementsExtraJS = function() {
            // screen (infoScreen) extra code

        };

    // screen elements handler
    var infoScreen_elementsEvents = function() {
            $(document).on("click", "a :input,a a,a fieldset label", function(event) {
                event.stopPropagation();
            });

        };

    $(document).off("pagebeforeshow", "#infoScreen").on("pagebeforeshow", "#infoScreen", function(event, ui) {
        infoScreen_beforeshow();
    });

    if (runBeforeShow) {
        infoScreen_beforeshow();
    } else {
        infoScreen_onLoad();
    }
};

$(document).off("pagecreate", "#infoScreen").on("pagecreate", "#infoScreen", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    infoScreen_js();
});